// AUTO-GENERATED FILE. DO NOT MODIFY MANUALLY.
// Generated by CMS → Prefab Buffer Generator

using System.Collections.Generic;
using System.Linq;
using Logic.CMS.ECS.PrefabTypes;
using Unity.Entities;
using UnityEngine;

namespace Logic.CMS.ECS.Generated
{
    [DisallowMultipleComponent]
    public class PrefabsAuthoring : MonoBehaviour
    {
        public CMS CMS;

        private void OnValidate()
        {
            gameObject.name = GetType().Name;
        }

        private class PrefabsBaker : Baker<PrefabsAuthoring>
        {
            public override void Bake(PrefabsAuthoring authoring)
            {
                if (authoring.CMS == null) return;
                DependsOn(authoring.CMS);

                var entity = GetEntity(authoring, TransformUsageFlags.None);

                // --- AudioPrefab ---
                {
                    var buffer = AddBuffer<AudioPrefabBuffer>(entity);
                    foreach (var a in authoring.CMS.Entries.SelectMany(x => x.Objects))
                    {
                        if (a.PrefabType is AudioPrefab p)
                        {
                            buffer.Add(new AudioPrefabBuffer()
                            {
                                HashKey = a.HashKey,
                                Prefab = GetEntity(a.Object, TransformUsageFlags.Dynamic | TransformUsageFlags.Renderable),
                                LifeTime = p.LifeTime,
                                Volume = p.Volume,
                            });
                        }
                    }
                }

                // --- ParticlesPrefab ---
                {
                    var buffer = AddBuffer<ParticlesPrefabBuffer>(entity);
                    foreach (var a in authoring.CMS.Entries.SelectMany(x => x.Objects))
                    {
                        if (a.PrefabType is ParticlesPrefab p)
                        {
                            buffer.Add(new ParticlesPrefabBuffer()
                            {
                                HashKey = a.HashKey,
                                Prefab = GetEntity(a.Object, TransformUsageFlags.Dynamic | TransformUsageFlags.Renderable),
                                LifeTime = p.LifeTime,
                                Scale = p.Scale,
                            });
                        }
                    }
                }

            }
        }
    }
}
